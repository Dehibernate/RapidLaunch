/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rapidlaunch;

import java.io.File;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Dehibernate
 */
public class Settings extends javax.swing.JFrame {

    ArrayList<Path> folders = new ArrayList<>();

    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();
    }

    private class Path implements Serializable {

        private String path;
        private ArrayList<String> extensions = new ArrayList<>();

        public Path(String p) {
            path = p;
        }

        private void addExt(String ext) {
            extensions.add(ext);
        }

        private int deleteExt(String ext) {
            int pos = -1;
            for (String s : extensions) {
                if (s.equals(ext)) {
                    pos = extensions.indexOf(s);
                    extensions.remove(s);
                }
            }
            return pos;
        }

        public Object[] getExt() {
            return extensions.toArray();
        }

        @Override
        public String toString() {
            return path;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listPath = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listExt = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAddPath = new javax.swing.JButton();
        btnRemPath = new javax.swing.JButton();
        btnAddExt = new javax.swing.JButton();
        btnRemExt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPathMouseClicked(evt);
            }
        });
        listPath.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPathValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listPath);

        jScrollPane2.setViewportView(listExt);

        jLabel1.setText("Extensions:");

        jLabel2.setText("Folders to scan:");

        btnAddPath.setText("Add Path");
        btnAddPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPathActionPerformed(evt);
            }
        });

        btnRemPath.setText("Remove Path");
        btnRemPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemPathActionPerformed(evt);
            }
        });

        btnAddExt.setText("Add Ext.");
        btnAddExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddExtActionPerformed(evt);
            }
        });

        btnRemExt.setText("Remove ext.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemPath))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddExt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemExt)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPath)
                    .addComponent(btnRemPath)
                    .addComponent(btnAddExt)
                    .addComponent(btnRemExt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPathActionPerformed
        JFileChooser j = new JFileChooser();
        j.setFileFilter(new FolderFilter());
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        j.showOpenDialog(null);
        if (j.getSelectedFile() != null) {
            boolean exists = false;
            for (Path f : folders) {
                if (f.toString().equals(j.getSelectedFile().toString())) {
                    exists = true;
                }
            }
            if (!exists) {
                folders.add(new Path(j.getSelectedFile().toString()));
            }
            int ci = listPath.getModel().getSize();
            listPath.setSelectedIndex(ci - 1);
            listPath.setListData(folders.toArray());
            updateLists();
        }


    }//GEN-LAST:event_btnAddPathActionPerformed

    private void updateLists() {
        int index = listPath.getSelectedIndex();
        
        Object[] ar ={};
        if (folders.size() > 0 && index>-1) {
            ar =folders.get(index).getExt();
        }
        listExt.setListData(ar);
    }

    private void btnRemPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemPathActionPerformed
        int ci = listPath.getSelectedIndex();
        System.out.println(ci);
        int size = listPath.getModel().getSize();
        System.out.println(size);
        if (ci > -1) {
            folders.remove(listPath.getSelectedIndex());
            listPath.setSelectedIndex((ci == size - 1) ? ci - 1 : ci);
            
            listPath.setListData(folders.toArray());
            updateLists();
        }
    }//GEN-LAST:event_btnRemPathActionPerformed

    private void btnAddExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddExtActionPerformed
        int ci = listPath.getSelectedIndex();
        if (ci > -1) {
            String g = JOptionPane.showInputDialog(null);
            if (g.startsWith("*.")) {
                folders.get(listPath.getSelectedIndex()).addExt(g);
            } else {
                JOptionPane.showMessageDialog(null, "Please entere a valid extention (e.g. *.txt");
            }
            updateLists();
        }
    }//GEN-LAST:event_btnAddExtActionPerformed

    private void listPathValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPathValueChanged
        
    }//GEN-LAST:event_listPathValueChanged

    private void listPathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPathMouseClicked
        updateLists();
    }//GEN-LAST:event_listPathMouseClicked

    private static class FolderFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            return file.isDirectory();
        }

        @Override
        public String getDescription() {
            return "We only take directories";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddExt;
    private javax.swing.JButton btnAddPath;
    private javax.swing.JButton btnRemExt;
    private javax.swing.JButton btnRemPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listExt;
    private javax.swing.JList listPath;
    // End of variables declaration//GEN-END:variables
}
